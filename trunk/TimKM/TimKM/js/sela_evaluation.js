/*
 * This file was automatically generated By Code Smith 
 * Modifications will be overwritten when code smith is run
 *
 * PLEASE DO NOT MAKE MODIFICATIONS TO THIS FILE
 * Date Created 5/6/2012
 *
 */



/// <summary>
/// Implementations of slevaluations represent a Evaluation
///
/// </summary>
function Evaluation()
{		   
	//region PRESERVE ExtraMethods For Evaluation
	//endregion
    //region Contants	
    var ACT_ADD = 10;
    var ACT_UPDATE = 11;
    var ACT_DELETE = 12;
    var ACT_CHANGE_PAGE = 13;
    var ACT_SHOW_EDIT = 14;
    var ACT_GET = 15;
    var _strPage = "admin_evaluation.php";
    
   
    //endregion   
    
    //region Public Functions
    
    this.btnSave_OnClick = btnSave_OnClick;
    function btnSave_OnClick() {
        core.disableControl("btnOK", true);
        var isValid = true;

		var articleID = core.trim(core.getObject("txtArticleID").val());
		core.ValidateInputTextBox('txtArticleID','');
		if(articleID == ''){
			core.ValidateInputTextBox('txtArticleID','ArticleID is required', isValid);
			isValid =  false;
		}else if (articleID.length > 20) {
			core.ValidateInputTextBox('txtArticleID','ArticleID must be less than 20', isValid);
			isValid =  false;
		}

		var evaluationID = core.trim(core.getObject("txtEvaluationID").val());
		core.ValidateInputTextBox('txtEvaluationID','');
		if(evaluationID == ''){
			core.ValidateInputTextBox('txtEvaluationID','EvaluationID is required', isValid);
			isValid =  false;
		}else if (evaluationID.length > 20) {
			core.ValidateInputTextBox('txtEvaluationID','EvaluationID must be less than 20', isValid);
			isValid =  false;
		}

		var numEvaluation = core.trim(core.getObject("txtNumEvaluation").val());
		core.ValidateInputTextBox('txtNumEvaluation','');
		if(numEvaluation == ''){
			core.ValidateInputTextBox('txtNumEvaluation','NumEvaluation is required', isValid);
			isValid =  false;
		}
		var evaluatedBy = core.trim(core.getObject("txtEvaluatedBy").val());
		core.ValidateInputTextBox('txtEvaluatedBy','');
		if(evaluatedBy == ''){
			core.ValidateInputTextBox('txtEvaluatedBy','EvaluatedBy is required', isValid);
			isValid =  false;
		}
		var lastEvaluated = core.trim(core.getObject("txtLastEvaluated").val());
		core.ValidateInputTextBox('txtLastEvaluated','');
		if(lastEvaluated == ''){
			core.ValidateInputTextBox('txtLastEvaluated','LastEvaluated is required', isValid);
			isValid =  false;
		}else if (core.ValidateDateTime(lastEvaluated) == false) {
			core.getObject('txtLastEvaluated')[0].focus();
			strError += '<p>LastEvaluated is invalid!</p>';
		}

	       
        if (isValid == false) {
         core.disableControl("btnOK", false);
            return;
        }
         
        if (core.getObject("adddocmode")[0].value == ADD_MODE) {
            insertNew();
        }
        else {
            edit();
        }
    }
    
    this.edit = edit;
    function edit() {

		var articleID = core.trim(core.getObject("txtArticleID").val());
		var evaluationID = core.trim(core.getObject("txtEvaluationID").val());
		var numEvaluation = core.trim(core.getObject("txtNumEvaluation").val());
		var evaluatedBy = core.trim(core.getObject("txtEvaluatedBy").val());
		var lastEvaluated = core.trim(core.getObject("txtLastEvaluated").val());
	                
        strRequest = "?isAJ=1&act=" + ACT_UPDATE +  
            '&ArticleID='+ core.urlencode(articleID)+
			'&EvaluationID='+ core.urlencode(evaluationID)+
			'&NumEvaluation='+ core.urlencode(numEvaluation)+
			'&EvaluatedBy='+ core.urlencode(evaluatedBy)+
			'&LastEvaluated='+ core.urlencode(lastEvaluated)		;
        
        var ajax = new Ajax();
        ajax.SendRequestToServerWithCustomMsg(_strPage, strRequest, edit_OnCallBack, true, MSG_AJAX_FETCHING_VN);
    }

    function edit_OnCallBack(xmlHTTPRequest) {
        core.disableControl("btnOK", false);
        if (xmlHTTPRequest.readyState == 4) {
            if (xmlHTTPRequest.status == 200) {
                var strRespond = core.parserXML(xmlHTTPRequest.responseText);
                if (!core.headerProcessingArr(strRespond[0], Array(true, true, false))) {
                    // ph?i kh?i t?o l?i d? tr?nh d?ng popdiv addFavourite
                    //var popDiv = new PopDiv();
                    //popDiv.init();
                    popDiv.alert(MSG_RES_OPERATION_FAIL, SYSTEM_TITLE_ERROR, 1);
                    return;
                }
                if (parseInt(strRespond[1]['rs']) == 1) {
                    showInfoBar('success', strRespond[1]["inf"]);
                    showAddMode();
                    changePage(_strPage, ACT_CHANGE_PAGE, core.getObject("txtPage").val());
                }
                else {
                    //var popDiv = new PopDiv();
                    //popDiv.init();
                    top.popDiv.childPop.alert(strRespond[1]["inf"], SYSTEM_TITLE_ERROR, 1);
                }
            }
        }
    }
    
    this.insertNew = insertNew;
    function insertNew() {

		var articleID = core.trim(core.getObject("txtArticleID").val());
		var evaluationID = core.trim(core.getObject("txtEvaluationID").val());
		var numEvaluation = core.trim(core.getObject("txtNumEvaluation").val());
		var evaluatedBy = core.trim(core.getObject("txtEvaluatedBy").val());
		var lastEvaluated = core.trim(core.getObject("txtLastEvaluated").val());
	        
        strRequest = "?isAJ=1&act=" + ACT_ADD +  
            '&ArticleID='+ core.urlencode(articleID)+
			'&EvaluationID='+ core.urlencode(evaluationID)+
			'&NumEvaluation='+ core.urlencode(numEvaluation)+
			'&EvaluatedBy='+ core.urlencode(evaluatedBy)+
			'&LastEvaluated='+ core.urlencode(lastEvaluated)		;
        
        var ajax = new Ajax();
        ajax.SendRequestToServerWithCustomMsg(_strPage, strRequest, insertNew_OnCallBack, true, MSG_AJAX_FETCHING_VN);
    }

    function insertNew_OnCallBack(xmlHTTPRequest) {
        core.disableControl("btnOK", false);
        if (xmlHTTPRequest.readyState == 4) {
            if (xmlHTTPRequest.status == 200) {
                var strRespond = core.parserXML(xmlHTTPRequest.responseText);
                if (!core.headerProcessingArr(strRespond[0], Array(true, true, false))) {
                    // ph?i kh?i t?o l?i d? tr?nh d?ng popdiv addFavourite
                    //var popDiv = new PopDiv();
                    //popDiv.init();
                    popDiv.alert(MSG_RES_OPERATION_FAIL, SYSTEM_TITLE_ERROR, 1);
                    return;
                }
                if (parseInt(strRespond[1]['rs']) == 1) {
                    showInfoBar('success', strRespond[1]["inf"]);
                    showAddMode();
                    changePage(_strPage, ACT_CHANGE_PAGE, 1);
                }
                else {
                    //var popDiv = new PopDiv();
                    //popDiv.init();
                    top.popDiv.childPop.alert(strRespond[1]["inf"], SYSTEM_TITLE_ERROR, 1);
                }
            }
        }
    }
    
    var _cacheURL_pdoc;
    this.deleteObj = deleteObj;
    function deleteObj(id, name) {
        //curRow = currentRowId;
        popDiv.alert('Do you want to delete ' + name + ' ?', SYSTEM_TITLE_ERROR, 2, "_objEvaluation.delete_OK()", "_objEvaluation.delete_Cancel()");

        var keyword = '';
        if (typeof core.getObject("txtGet") != 'undefined') {
            keyword = core.getObject("txtGet").val();
        }
      
        _cacheURL_pdoc = _strPage + "?isAJ=1&act=" + ACT_DELETE + "&id=" + docid + "&p=" + core.getObject("txtPage")[0].value + "&kw=" + keyword;
    }
    this.delete_Cancel = delete_Cancel;
    function delete_Cancel() {
        //core.getObject("adddocmode")[0].value = ADD_MODE;
    }
    this.delete_OK = delete_OK;
    function delete_OK() {
        // Prepare AJAX to remove selected doc from favorite list
        var ajax = new Ajax(METHOD_GET);
        ajax.SendRequestToServerWithCustomMsg(_cacheURL_pdoc, null, delete_OnCallBack, true, MSG_AJAX_FETCHING_VN);
    }
    function delete_OnCallBack(xmlHTTPRequest) {

        if (xmlHTTPRequest.readyState == 4) {
            if (xmlHTTPRequest.status == 200) {
                var strRespond = core.parserXML(xmlHTTPRequest.responseText);

                if (!core.headerProcessingArr(strRespond[0], Array(true, true, false))) {
                    popDiv.alert(MSG_RES_OPERATION_FAIL, SYSTEM_TITLE_ERROR, 1);
                    return;
                }
                if (parseInt(strRespond[1]['rs']) == 1) {
                    parent.window.showInfoBar('success', strRespond[1]["inf"]);
                    core.getObject("txtPage")[0].value = strRespond[1]["p"];
                    popDiv.hide();
                    core.getObject("list-content")[0].innerHTML = strRespond[1]['list'];
                }
                else //if(parseInt(strRespond[3]) == -1)
                {
                    popDiv.alert(MSG_RES_OPERATION_FAIL, SYSTEM_TITLE_ERROR, 1);
                }
            }
        }
    }
    
    this.showEdit = showEdit;
    function showEdit(strID) {
        showAddMode();
        strRequest = "?isAJ=1&act=" + ACT_SHOW_EDIT + "&id=" + strID; ;
        var ajax = new Ajax(METHOD_GET);
        ajax.SendRequestToServerWithCustomMsg(_strPage + strRequest, null, showEdit_OnCallBack, true, MSG_AJAX_FETCHING_VN);

    }
    function showEdit_OnCallBack(xmlHTTPRequest) {

        if (xmlHTTPRequest.readyState == 4) {
            if (xmlHTTPRequest.status == 200) {
                var strRespond = core.parserXML(xmlHTTPRequest.responseText);
                if (!core.headerProcessingArr(strRespond[0], Array(true, true, false))) {
                    popDiv.alert(MSG_RES_OPERATION_FAIL, SYSTEM_TITLE_ERROR, 1);
                    return;
                }
                if (parseInt(strRespond[1]['rs']) == 1) {
                    showInfoBar('success', MSG_RES_OPERATION_SUCCESS);
                    //alert(strRespond[1]['sens']);
                    // Add Doc && clear field
					core.getObject('txtArticleID').val(ArticleID);
					core.getObject('txtEvaluationID').val(EvaluationID);
					core.getObject('txtNumEvaluation').val(NumEvaluation);
					core.getObject('txtEvaluatedBy').val(EvaluatedBy);
					core.getObject('txtLastEvaluated').val(LastEvaluated);
                    core.getObject("adddocmode")[0].value = EDIT_MODE;
                    core.getObject("status-add")[0].innerHTML = 'Edit mode';
                }
                else  // Duplicate
                {
                    popDiv.alert(MSG_RES_OPERATION_FAIL, SYSTEM_TITLE_ERROR, 1);
                }
            }
        }
    }
    
    this.showAddMode = showAddMode;
    function showAddMode() {
        core.getObject("adddocmode")[0].value = ADD_MODE;
        core.getObject("status-add")[0].innerHTML = 'Add mode';
		core.getObject('txtArticleID').val('');
		core.getObject('txtEvaluationID').val('');
		core.getObject('txtNumEvaluation').val('');
		core.getObject('txtEvaluatedBy').val('');
		core.getObject('txtLastEvaluated').val('');
    }
    //endregion   
}
var _objEvaluation = new  Evaluation();
