<?php
/*
 * This file was automatically generated By Code Smith 
 * Modifications will be overwritten when code smith is run
 *
 * PLEASE DO NOT MAKE MODIFICATIONS TO THIS FILE
 * Date Created 5/6/2012
 *
 */

/* <summary>
 * Implementations of sladvertisings represent a Advertising
 * </summary>
 */
class Model_Advertising
{		   
	#region PRESERVE ExtraMethods For Advertising
	#endregion
	#region Contants	
	const ACT_ADD							= 10;
	const ACT_UPDATE						= 11;
	const ACT_DELETE						= 12;
	const ACT_CHANGE_PAGE					= 13;
	const ACT_SHOW_EDIT                     = 14;
	const ACT_GET                           = 15;
	const NUM_PER_PAGE                      = 15;
	
	const TBL_SL_ADVERTISING			            = 'sl_advertising';
	
	const SQL_INSERT_SL_ADVERTISING		= 'INSERT INTO `{0}`
		(
		AdvertisingID,
		AdvertisingName,
		PartnerID,
		StartDate,
		EndDate,
		AdTypeID,
		`Content`,
		ImageLink,
		`PreferLink`,
		`Order`,
		CreatedBy,
		CreatedDate,
		ModifiedBy,
		ModifiedDate,
		DeletedBy,
		DeletedDate,
		IsDeleted,
		Status
		)
		VALUES (
		\'{1}\', \'{2}\', \'{3}\', \'{4}\', \'{5}\', \'{6}\', \'{7}\', \'{8}\', \'{9}\', \'{10}\', \'{11}\', \'{12}\', \'{13}\', \'{14}\', \'{15}\', \'{16}\', \'{17}\', \'{18}\'
		);';
	
	const SQL_UPDATE_SL_ADVERTISING		= 'UPDATE `{0}`
		SET  			
		`AdvertisingName` = \'{2}\',
		`PartnerID` = \'{3}\',
		`StartDate` = \'{4}\',
		`EndDate` = \'{5}\',
		`AdTypeID` = \'{6}\',
		`Content` = \'{7}\',
		`ImageLink` = \'{8}\',
		`PreferLink` = \'{9}\',
		`Order` = \'{10}\',
		`CreatedBy` = \'{11}\',
		`CreatedDate` = \'{12}\',
		`ModifiedBy` = \'{13}\',
		`ModifiedDate` = \'{14}\',
		`DeletedBy` = \'{15}\',
		`DeletedDate` = \'{16}\',
		`IsDeleted` = \'{17}\',
		`Status` = \'{18}\'
		WHERE `AdvertisingID` = \'{1}\'  ';
	
	
	const SQL_CREATE_TABLE_SL_ADVERTISING		= 'CREATE TABLE `{0}` (
		
		`AdvertisingID` bigint,
		`AdvertisingName` varchar(50),
		`PartnerID` varchar(20),
		`StartDate` ,
		`EndDate` ,
		`AdTypeID` varchar(20),
		`ImageLink` varchar(255),
		`CreatedBy` varchar(20),
		`CreatedDate` ,
		`ModifiedBy` varchar(20),
		`ModifiedDate` ,
		`DeletedBy` varchar(20),
		`DeletedDate` ,
		`IsDeleted` ,
		`Status` varchar(20),
		PRIMARY KEY(AdvertisingID)
		) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;';
	
	#endregion   
	
	#region Variables
	var $_objConnection;
	#end region
	
	#region Contructors
	/**
	*  Phuong th?c kh?i t?o d?i tu?ng faq d?ng th?i t?o connection d?n db
	*
	* @param object $objConnection ??i tu?ng k?t n?i d?n db
			
	* @return void 
	*
	*/
	public function  Model_Advertising($objConnection)
	{
		$this->_objConnection = $objConnection;
		
	}
	#region
	
	#region Public Functions
	
	public function insert( $advertisingname,$partnerid,$startdate,$enddate,$adtypeid,$content,$imagelink,$preferlink,$order,$createdby,$status)
	{
		$strTableName = self::TBL_SL_ADVERTISING;
		$strSQL = global_common::prepareQuery(self::SQL_INSERT_SL_ADVERTISING,
				array(self::TBL_SL_ADVERTISING,0,global_common::escape_mysql_string($advertisingname),
					global_common::escape_mysql_string($partnerid),global_common::formatDateTimeSQL($startdate),
					global_common::formatDateTimeSQL($endDate),global_common::escape_mysql_string($adtypeid),
					global_common::escape_mysql_string($content),
					global_common::escape_mysql_string($imagelink),
					global_common::escape_mysql_string($preferlink),
					global_common::escape_mysql_string($order),
					global_common::escape_mysql_string($createdby),global_common::nowSQL(),
					global_common::escape_mysql_string($modifiedby),global_common::escape_mysql_string($modifieddate),
					global_common::escape_mysql_string($deletedby),global_common::escape_mysql_string($deleteddate),
					global_common::escape_mysql_string($isdeleted),	global_common::escape_mysql_string($status)));
		
		if (!global_common::ExecutequeryWithCheckExistedTable($strSQL,self::SQL_CREATE_TABLE_SL_ADVERTISING,$this->_objConnection,$strTableName))
		{
			//echo $strSQL;
			global_common::writeLog('Error add sl_advertising:'.$strSQL,1);
			return false;
		}	
		$intID = global_common::getMaxValueofField(global_mapping::AdvertisingID,self::TBL_SL_ADVERTISING);
		return $intID;
		
	}
	
	public function update($advertisingid,$advertisingname,$partnerid,$startdate,$enddate,$adtypeid,$content,$imagelink,$preferlink,$order,$createdby,$createddate,$modifiedby,$modifieddate,$deletedby,$deleteddate,$isdeleted,$status)
	{
		$strTableName = self::TBL_SL_ADVERTISING;
		$strSQL = global_common::prepareQuery(self::SQL_UPDATE_SL_ADVERTISING,
				array($strTableName,global_common::escape_mysql_string($advertisingid),
					global_common::escape_mysql_string($advertisingname),global_common::escape_mysql_string($partnerid),
					global_common::formatDateTimeSQL($startdate),global_common::formatDateTimeSQL($enddate),
					global_common::escape_mysql_string($adtypeid),
					global_common::escape_mysql_string($content),
					global_common::escape_mysql_string($imagelink),
					global_common::escape_mysql_string($preferlink),
					global_common::escape_mysql_string($order),global_common::escape_mysql_string($createdby),
					global_common::escape_mysql_string($createddate),global_common::escape_mysql_string($modifiedby),
					global_common::escape_mysql_string($modifieddate),global_common::escape_mysql_string($deletedby),
					global_common::escape_mysql_string($deleteddate),global_common::escape_mysql_string($isdeleted),
					global_common::escape_mysql_string($status) ));
		
		if (!global_common::ExecutequeryWithCheckExistedTable($strSQL,self::SQL_CREATE_TABLE_SL_ADVERTISING,$this->_objConnection,$strTableName))
		{
			//echo $strSQL;
			global_common::writeLog('Error add sl_advertising:'.$strSQL,1);
			return false;
		}	
		return $advertisingid;
	}
	
	public function getAdvertisingByID($objID,$selectField='*') 
	{		
		$strSQL .= global_common::prepareQuery(global_common::SQL_SELECT_FREE, 
				array($selectField, self::TBL_SL_ADVERTISING ,							
					'WHERE AdvertisingID = \''.$objID.'\' '));
		//echo '<br>SQL:'.$strSQL;
		$arrResult =$this->_objConnection->selectCommand($strSQL);		
		if(!$arrResult)
		{
			global_common::writeLog('get sl_advertising ByID:'.$strSQL,1,$_mainFrame->pPage);
			return null;
		}
		//print_r($arrResult);
		return $arrResult[0];
	}
	
	public function getAllAdvertising($intPage = 0,$selectField='*',$whereClause='',$orderBy='') 
	{		
		if(!$selectField)
		{
			$selectField='*';
		}
		
		if($whereClause)
		{
			$whereClause = ' WHERE '.$whereClause;
		}
		
		if($orderBy)
		{
			$orderBy = ' ORDER BY '.$orderBy;
		}
		if($intPage>0)
		{
			$strSQL .= global_common::prepareQuery(global_common::SQL_SELECT_FREE, 
					array($selectField, Model_Advertising::TBL_SL_ADVERTISING ,							
						$whereClause.$orderBy .' limit '.(($intPage-1)* self::NUM_PER_PAGE).','.self::NUM_PER_PAGE));
		}
		else
		{
			$strSQL .= global_common::prepareQuery(global_common::SQL_SELECT_FREE, 
					array($selectField, Model_Advertising::TBL_SL_ADVERTISING ,							
						$whereClause.$orderBy ));
		}
		//echo '<br>SQL:'.$strSQL;
		$arrResult =$this->_objConnection->selectCommand($strSQL);		
		if(!$arrResult)
		{
			global_common::writeLog('get All sl_advertising:'.$strSQL,1,$_mainFrame->pPage);
			return null;
		}
		//print_r($arrResult);
		return $arrResult;
	}
	
	public function getListAdvertising($intPage,$orderBy='AdvertisingID', $whereClause)
	{		
		if($whereClause)
		{
			$whereClause='WHERE'+ $whereClause;						
		}
		if($orderBy)
		{
			$orderBy='ORDER BY'+ $orderBy;						
		}
		$strSQL .= global_common::prepareQuery(global_common::SQL_SELECT_FREE,array('*',
					self::TBL_SL_ADVERTISING,$orderBy.' '.$whereClause.' limit '.(($intPage-1)* self::NUM_PER_PAGE).','.self::NUM_PER_PAGE));
		//echo 'sql:'.$strSQL;	
		$arrResult = $this->_objConnection->selectCommand($strSQL);
		//print_r($arrResult);
		$strHTML = '<table class="tbl-list">
				<thead>
				<td>AdvertisingID</td>
				<td>AdvertisingName</td>
				<td>PartnerID</td>
				<td>StartDate</td>
				<td>EndDate</td>
				<td>AdTypeID</td>
				<td>ImageLink</td>
				<td>CreatedBy</td>
				<td>CreatedDate</td>
				<td>ModifiedBy</td>
				<td>ModifiedDate</td>
				<td>DeletedBy</td>
				<td>DeletedDate</td>
				<td>IsDeleted</td>
				<td>Status</td>
				</thead>
				<tbody>';
		$icount = count($arrmenu);
		for($i=0;$i<$icount;$i++)
		{
			$strHTML.='<tr class="'.($i%2==0?'even':'odd').'">
					<td>'.$arrResult[$i]['AdvertisingID'].'</td>
					<td>'.$arrResult[$i]['AdvertisingName'].'</td>
					<td>'.$arrResult[$i]['PartnerID'].'</td>
					<td>'.$arrResult[$i]['StartDate'].'</td>
					<td>'.$arrResult[$i]['EndDate'].'</td>
					<td>'.$arrResult[$i]['AdTypeID'].'</td>
					<td>'.$arrResult[$i]['ImageLink'].'</td>
					<td>'.$arrResult[$i]['CreatedBy'].'</td>
					<td>'.$arrResult[$i]['CreatedDate'].'</td>
					<td>'.$arrResult[$i]['ModifiedBy'].'</td>
					<td>'.$arrResult[$i]['ModifiedDate'].'</td>
					<td>'.$arrResult[$i]['DeletedBy'].'</td>
					<td>'.$arrResult[$i]['DeletedDate'].'</td>
					<td><input type="checkbox" onclick="_objAdvertising.showHide(\''.$arrResult[$i]['AdvertisingID'].'\',\''.$arrResult[$i]['name'].'\',this)" '.($arrResult[$i]['IsDeleted']?'':'checked=checked').' /></td>
					<td class="lastCell">'.$arrResult[$i]['Status'].'</td>
					</tr>';
		}
		$strHTML.='</tbody></table>';
		
		$strHTML .= "<div>".global_common::getPagingHTMLByNum($intPage,self::NUM_PER_PAGE,global_common::getTotalRecord(self::TBL_SL_ADVERTISING,$this->_objConnection),
				"_objMenu.changePage")."</div>";
		return $strHTML;
	}
	
	#endregion   
}
?>
