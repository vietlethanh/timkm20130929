/*
 * This file was automatically generated By Code Smith 
 * Modifications will be overwritten when code smith is run
 *
 * PLEASE DO NOT MAKE MODIFICATIONS TO THIS FILE
 * Date Created 5/6/2012
 *
 */



/// <summary>
/// Implementations of slrequests represent a Request
///
/// </summary>
function Request()
{		   
	//region PRESERVE ExtraMethods For Request
	//endregion
    //region Contants	
    var ACT_ADD = 10;
    var ACT_UPDATE = 11;
    var ACT_DELETE = 12;
    var ACT_CHANGE_PAGE = 13;
    var ACT_SHOW_EDIT = 14;
    var ACT_GET = 15;
    var _strPage = "admin_request.php";
    
   
    //endregion   
    
    //region Public Functions
    
    this.btnSave_OnClick = btnSave_OnClick;
    function btnSave_OnClick() {
        core.disableControl("btnOK", true);
        var isValid = true;

		var requesID = core.trim(core.getObject("txtRequesID").val());
		core.ValidateInputTextBox('txtRequesID','');
		if(requesID == ''){
			core.ValidateInputTextBox('txtRequesID','RequesID is required', isValid);
			isValid =  false;
		}else if (requesID.length > 20) {
			core.ValidateInputTextBox('txtRequesID','RequesID must be less than 20', isValid);
			isValid =  false;
		}

		var contentRequest = core.trim(core.getObject("txtContentRequest").val());
		core.ValidateInputTextBox('txtContentRequest','');
		if(contentRequest == ''){
			core.ValidateInputTextBox('txtContentRequest','ContentRequest is required', isValid);
			isValid =  false;
		}
		var requestedBy = core.trim(core.getObject("txtRequestedBy").val());
		core.ValidateInputTextBox('txtRequestedBy','');
		if(requestedBy == ''){
			core.ValidateInputTextBox('txtRequestedBy','RequestedBy is required', isValid);
			isValid =  false;
		}else if (requestedBy.length > 20) {
			core.ValidateInputTextBox('txtRequestedBy','RequestedBy must be less than 20', isValid);
			isValid =  false;
		}

		var requestedDate = core.trim(core.getObject("txtRequestedDate").val());
		core.ValidateInputTextBox('txtRequestedDate','');
		if(requestedDate == ''){
			core.ValidateInputTextBox('txtRequestedDate','RequestedDate is required', isValid);
			isValid =  false;
		}else if (core.ValidateDateTime(requestedDate) == false) {
			core.getObject('txtRequestedDate')[0].focus();
			strError += '<p>RequestedDate is invalid!</p>';
		}

		var contentRespone = core.trim(core.getObject("txtContentRespone").val());
		core.ValidateInputTextBox('txtContentRespone','');
		if(contentRespone == ''){
			core.ValidateInputTextBox('txtContentRespone','ContentRespone is required', isValid);
			isValid =  false;
		}
		var responedBy = core.trim(core.getObject("txtResponedBy").val());
		core.ValidateInputTextBox('txtResponedBy','');
		if(responedBy == ''){
			core.ValidateInputTextBox('txtResponedBy','ResponedBy is required', isValid);
			isValid =  false;
		}else if (responedBy.length > 20) {
			core.ValidateInputTextBox('txtResponedBy','ResponedBy must be less than 20', isValid);
			isValid =  false;
		}

		var responedDate = core.trim(core.getObject("txtResponedDate").val());
		core.ValidateInputTextBox('txtResponedDate','');
		if(responedDate == ''){
			core.ValidateInputTextBox('txtResponedDate','ResponedDate is required', isValid);
			isValid =  false;
		}else if (core.ValidateDateTime(responedDate) == false) {
			core.getObject('txtResponedDate')[0].focus();
			strError += '<p>ResponedDate is invalid!</p>';
		}

		var isApproved = core.trim(core.getObject("txtIsApproved").val());
		core.ValidateInputTextBox('txtIsApproved','');
		if(isApproved == ''){
			core.ValidateInputTextBox('txtIsApproved','IsApproved is required', isValid);
			isValid =  false;
		}
	       
        if (isValid == false) {
         core.disableControl("btnOK", false);
            return;
        }
         
        if (core.getObject("adddocmode")[0].value == ADD_MODE) {
            insertNew();
        }
        else {
            edit();
        }
    }
    
    this.edit = edit;
    function edit() {

		var requesID = core.trim(core.getObject("txtRequesID").val());
		var contentRequest = core.trim(core.getObject("txtContentRequest").val());
		var requestedBy = core.trim(core.getObject("txtRequestedBy").val());
		var requestedDate = core.trim(core.getObject("txtRequestedDate").val());
		var contentRespone = core.trim(core.getObject("txtContentRespone").val());
		var responedBy = core.trim(core.getObject("txtResponedBy").val());
		var responedDate = core.trim(core.getObject("txtResponedDate").val());
		var isApproved = core.trim(core.getObject("txtIsApproved").val());
	                
        strRequest = "?isAJ=1&act=" + ACT_UPDATE +  
            '&RequesID='+ core.urlencode(requesID)+
			'&ContentRequest='+ core.urlencode(contentRequest)+
			'&RequestedBy='+ core.urlencode(requestedBy)+
			'&RequestedDate='+ core.urlencode(requestedDate)+
			'&ContentRespone='+ core.urlencode(contentRespone)+
			'&ResponedBy='+ core.urlencode(responedBy)+
			'&ResponedDate='+ core.urlencode(responedDate)+
			'&IsApproved='+ core.urlencode(isApproved)+		;
        
        var ajax = new Ajax();
        ajax.SendRequestToServerWithCustomMsg(_strPage, strRequest, edit_OnCallBack, true, MSG_AJAX_FETCHING_VN);
    }

    function edit_OnCallBack(xmlHTTPRequest) {
        core.disableControl("btnOK", false);
        if (xmlHTTPRequest.readyState == 4) {
            if (xmlHTTPRequest.status == 200) {
                var strRespond = core.parserXML(xmlHTTPRequest.responseText);
                if (!core.headerProcessingArr(strRespond[0], Array(true, true, false))) {
                    // ph?i kh?i t?o l?i d? tr?nh d?ng popdiv addFavourite
                    //var popDiv = new PopDiv();
                    //popDiv.init();
                    popDiv.alert(MSG_RES_OPERATION_FAIL, SYSTEM_TITLE_ERROR, 1);
                    return;
                }
                if (parseInt(strRespond[1]['rs']) == 1) {
                    showInfoBar('success', strRespond[1]["inf"]);
                    showAddMode();
                    changePage(_strPage, ACT_CHANGE_PAGE, core.getObject("txtPage").val());
                }
                else {
                    //var popDiv = new PopDiv();
                    //popDiv.init();
                    top.popDiv.childPop.alert(strRespond[1]["inf"], SYSTEM_TITLE_ERROR, 1);
                }
            }
        }
    }
    
    this.insertNew = insertNew;
    function insertNew() {

		var requesID = core.trim(core.getObject("txtRequesID").val());
		var contentRequest = core.trim(core.getObject("txtContentRequest").val());
		var requestedBy = core.trim(core.getObject("txtRequestedBy").val());
		var requestedDate = core.trim(core.getObject("txtRequestedDate").val());
		var contentRespone = core.trim(core.getObject("txtContentRespone").val());
		var responedBy = core.trim(core.getObject("txtResponedBy").val());
		var responedDate = core.trim(core.getObject("txtResponedDate").val());
		var isApproved = core.trim(core.getObject("txtIsApproved").val());
	        
        strRequest = "?isAJ=1&act=" + ACT_ADD +  
            '&RequesID='+ core.urlencode(requesID)+
			'&ContentRequest='+ core.urlencode(contentRequest)+
			'&RequestedBy='+ core.urlencode(requestedBy)+
			'&RequestedDate='+ core.urlencode(requestedDate)+
			'&ContentRespone='+ core.urlencode(contentRespone)+
			'&ResponedBy='+ core.urlencode(responedBy)+
			'&ResponedDate='+ core.urlencode(responedDate)+
			'&IsApproved='+ core.urlencode(isApproved)+		;
        
        var ajax = new Ajax();
        ajax.SendRequestToServerWithCustomMsg(_strPage, strRequest, insertNew_OnCallBack, true, MSG_AJAX_FETCHING_VN);
    }

    function insertNew_OnCallBack(xmlHTTPRequest) {
        core.disableControl("btnOK", false);
        if (xmlHTTPRequest.readyState == 4) {
            if (xmlHTTPRequest.status == 200) {
                var strRespond = core.parserXML(xmlHTTPRequest.responseText);
                if (!core.headerProcessingArr(strRespond[0], Array(true, true, false))) {
                    // ph?i kh?i t?o l?i d? tr?nh d?ng popdiv addFavourite
                    //var popDiv = new PopDiv();
                    //popDiv.init();
                    popDiv.alert(MSG_RES_OPERATION_FAIL, SYSTEM_TITLE_ERROR, 1);
                    return;
                }
                if (parseInt(strRespond[1]['rs']) == 1) {
                    showInfoBar('success', strRespond[1]["inf"]);
                    showAddMode();
                    changePage(_strPage, ACT_CHANGE_PAGE, 1);
                }
                else {
                    //var popDiv = new PopDiv();
                    //popDiv.init();
                    top.popDiv.childPop.alert(strRespond[1]["inf"], SYSTEM_TITLE_ERROR, 1);
                }
            }
        }
    }
    
    var _cacheURL_pdoc;
    this.deleteObj = deleteObj;
    function deleteObj(id, name) {
        //curRow = currentRowId;
        popDiv.alert('Do you want to delete ' + name + ' ?', SYSTEM_TITLE_ERROR, 2, "_objRequest.delete_OK()", "_objRequest.delete_Cancel()");

        var keyword = '';
        if (typeof core.getObject("txtGet") != 'undefined') {
            keyword = core.getObject("txtGet").val();
        }
      
        _cacheURL_pdoc = _strPage + "?isAJ=1&act=" + ACT_DELETE + "&id=" + docid + "&p=" + core.getObject("txtPage")[0].value + "&kw=" + keyword;
    }
    this.delete_Cancel = delete_Cancel;
    function delete_Cancel() {
        //core.getObject("adddocmode")[0].value = ADD_MODE;
    }
    this.delete_OK = delete_OK;
    function delete_OK() {
        // Prepare AJAX to remove selected doc from favorite list
        var ajax = new Ajax(METHOD_GET);
        ajax.SendRequestToServerWithCustomMsg(_cacheURL_pdoc, null, delete_OnCallBack, true, MSG_AJAX_FETCHING_VN);
    }
    function delete_OnCallBack(xmlHTTPRequest) {

        if (xmlHTTPRequest.readyState == 4) {
            if (xmlHTTPRequest.status == 200) {
                var strRespond = core.parserXML(xmlHTTPRequest.responseText);

                if (!core.headerProcessingArr(strRespond[0], Array(true, true, false))) {
                    popDiv.alert(MSG_RES_OPERATION_FAIL, SYSTEM_TITLE_ERROR, 1);
                    return;
                }
                if (parseInt(strRespond[1]['rs']) == 1) {
                    parent.window.showInfoBar('success', strRespond[1]["inf"]);
                    core.getObject("txtPage")[0].value = strRespond[1]["p"];
                    popDiv.hide();
                    core.getObject("list-content")[0].innerHTML = strRespond[1]['list'];
                }
                else //if(parseInt(strRespond[3]) == -1)
                {
                    popDiv.alert(MSG_RES_OPERATION_FAIL, SYSTEM_TITLE_ERROR, 1);
                }
            }
        }
    }
    
    this.showEdit = showEdit;
    function showEdit(strID) {
        showAddMode();
        strRequest = "?isAJ=1&act=" + ACT_SHOW_EDIT + "&id=" + strID; ;
        var ajax = new Ajax(METHOD_GET);
        ajax.SendRequestToServerWithCustomMsg(_strPage + strRequest, null, showEdit_OnCallBack, true, MSG_AJAX_FETCHING_VN);

    }
    function showEdit_OnCallBack(xmlHTTPRequest) {

        if (xmlHTTPRequest.readyState == 4) {
            if (xmlHTTPRequest.status == 200) {
                var strRespond = core.parserXML(xmlHTTPRequest.responseText);
                if (!core.headerProcessingArr(strRespond[0], Array(true, true, false))) {
                    popDiv.alert(MSG_RES_OPERATION_FAIL, SYSTEM_TITLE_ERROR, 1);
                    return;
                }
                if (parseInt(strRespond[1]['rs']) == 1) {
                    showInfoBar('success', MSG_RES_OPERATION_SUCCESS);
                    //alert(strRespond[1]['sens']);
                    // Add Doc && clear field
					core.getObject('txtRequesID').val(RequesID);
					core.getObject('txtContentRequest').val(ContentRequest);
					core.getObject('txtRequestedBy').val(RequestedBy);
					core.getObject('txtRequestedDate').val(RequestedDate);
					core.getObject('txtContentRespone').val(ContentRespone);
					core.getObject('txtResponedBy').val(ResponedBy);
					core.getObject('txtResponedDate').val(ResponedDate);
					core.getObject('txtIsApproved').val(IsApproved);
                    core.getObject("adddocmode")[0].value = EDIT_MODE;
                    core.getObject("status-add")[0].innerHTML = 'Edit mode';
                }
                else  // Duplicate
                {
                    popDiv.alert(MSG_RES_OPERATION_FAIL, SYSTEM_TITLE_ERROR, 1);
                }
            }
        }
    }
    
    this.showAddMode = showAddMode;
    function showAddMode() {
        core.getObject("adddocmode")[0].value = ADD_MODE;
        core.getObject("status-add")[0].innerHTML = 'Add mode';
		core.getObject('txtRequesID').val('');
		core.getObject('txtContentRequest').val('');
		core.getObject('txtRequestedBy').val('');
		core.getObject('txtRequestedDate').val('');
		core.getObject('txtContentRespone').val('');
		core.getObject('txtResponedBy').val('');
		core.getObject('txtResponedDate').val('');
		core.getObject('txtIsApproved').val('');
    }
    //endregion   
}
var _objRequest = new  Request();
